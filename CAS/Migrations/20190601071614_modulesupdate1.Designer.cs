// <auto-generated />
using System;
using CAS;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CAS.Migrations
{
    [DbContext(typeof(CASContext))]
    [Migration("20190601071614_modulesupdate1")]
    partial class modulesupdate1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CAS.Assignment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedOn");

                    b.Property<string>("Attachment");

                    b.Property<int?>("CASClassId");

                    b.Property<int>("ClassID");

                    b.Property<string>("DueDate");

                    b.Property<string>("Instructions");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.HasIndex("CASClassId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("CAS.CASClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy");

                    b.Property<DateTime>("AddedOn");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectCode");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("CAS.Comments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssignmentID");

                    b.Property<string>("Comment");

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("AssignmentID");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CAS.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Token");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CAS.Assignment", b =>
                {
                    b.HasOne("CAS.CASClass")
                        .WithMany("Assignment")
                        .HasForeignKey("CASClassId");
                });

            modelBuilder.Entity("CAS.CASClass", b =>
                {
                    b.HasOne("CAS.User")
                        .WithMany("classes")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CAS.Comments", b =>
                {
                    b.HasOne("CAS.Assignment")
                        .WithMany("Comments")
                        .HasForeignKey("AssignmentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CAS.User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
